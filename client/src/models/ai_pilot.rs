/*
 * AIPilot Submission Server API
 *
 * API for managing AIPilot submissions and battle matches
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use schemars::JsonSchema;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, JsonSchema)]
pub struct AiPilot {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "ownerId")]
    pub owner_id: String,
    #[serde(rename = "current")]
    pub current: models::AipVersion,
    #[serde(rename = "versions")]
    pub versions: Vec<models::AipVersion>,
}

impl AiPilot {
    pub fn new(
        id: uuid::Uuid,
        name: String,
        owner_id: String,
        current: models::AipVersion,
        versions: Vec<models::AipVersion>,
    ) -> AiPilot {
        AiPilot {
            id,
            name,
            owner_id,
            current,
            versions,
        }
    }
}
